/*
 * Maintained by brightSPARK Labs.
 * www.brightsparklabs.com
 *
 * Refer to LICENSE at repository root for license details.
 */


// -----------------------------------------------------------------------------
// PLUGINS
// -----------------------------------------------------------------------------

plugins {
    // Apply the Java Gradle plugin development plugin to add support for developing Gradle plugins.
    id "java-gradle-plugin"
    id "com.gradle.plugin-publish" version "1.3.1"
    id "maven-publish"

    // Apply the Groovy plugin to add support for Groovy.
    id "groovy"

    // Apply the Java plugin to add support for Java.
    id "java"

    // -------------------------------------------------------------------------
    // PLUGINS THIS PLUGIN WILL APPLY WHEN ADDED
    // -------------------------------------------------------------------------

    // NOTE: KEEP THESE VERSIONS ALIGNED WITH THE DEPENDENCIES BLOCK.

    // Apply the Spotless plugin for formatting.
    alias libs.plugins.spotless

    // Apply the Error Prone plugin for static code analysis.
    alias libs.plugins.errorProne

    // Apply the Gradle Versions + Use Latest Versions plugins for stale dependency checks.
    alias libs.plugins.benManesVersions
    alias libs.plugins.useLatestVersions

    // Apply the OWASP plugin for vulnerability dependency checks.
    alias libs.plugins.dependencyCheck

    // Apply dependency licence report plugin.
    // Requires using version 2.0 or lower as the caching for the checkLicense task
    // was changed to no longer update on file content change.
    alias libs.plugins.licenseReport

    // NOTE: Do NOT add shadow as it is irrelevant for the gradle plugin itself.
    // Left here for info, as it WILL be applied to projects which use this plugin since fat
    // jars support will be desired there.
    //  alias libs.plugins.shadow
}

// -----------------------------------------------------------------------------
// REPOSITORIES/DEPENDENCIES
// -----------------------------------------------------------------------------

repositories {
    mavenCentral()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
}

dependencies {
    implementation(
            // Add external plugins here so they can be added via our plugin.
            // NOTE: KEEP THESE VERSIONS ALIGNED WITH THE PLUGINS BLOCK.
            // NOTE: Obtain plugin dependency strings from plugins.gradle.org page.
            libs.spotless,
            libs.errorProne,
            libs.errorProneCore,
            libs.benManesVersions,
            libs.useLatestVersions,
            libs.dependencyCheck,
            libs.shadow,
            libs.licenseReport,

            // NOTE: The dependencies below here are libraries and do not need to be added as plugins.

            // We use `platform` to specify AWS SDK dependencies, as this is recommended by Amazon.
            // See https://docs.aws.amazon.com/sdk-for-java/latest/developer-guide/setup-project-gradle.html
            platform(libs.awsSdkBom),
            libs.awsSdkS3
            )

    // Use the awesome Spock testing and specification framework.
    // NOTE: Need to stick with groovy-3.0 until Gradle buildscripts support Groovy 4.
    testImplementation platform(libs.spockBom)
    testImplementation libs.spockCore
}

// -----------------------------------------------------------------------------
// PROJECT IDENTIFICATION
// -----------------------------------------------------------------------------

project.description = "Applies brightSPARK Labs standardisation to gradle projects"
project.group       = "com.brightsparklabs"

def versionProcess  = "git describe --always --dirty".execute()
versionProcess.waitFor()
project.version     = versionProcess.exitValue() == 0 ? versionProcess.text.trim() : "0.0.0-UNKNOWN"

project.ext.scm     = "https://github.com/brightsparklabs/gradle-baseline.git"
project.ext.url     = "https://github.com/brightsparklabs/gradle-baseline"

// -----------------------------------------------------------------------------
// java-gradle-plugin
// -----------------------------------------------------------------------------

gradlePlugin {
    website = project.url
    vcsUrl = project.scm
    plugins {
        baseline {
            id = "com.brightsparklabs.gradle.baseline"
            displayName = "Gradle Baseline at brightSPARK Labs"
            description = "Applies brightSPARK Labs standardisation to gradle projects"
            tags.set(['brightsparklabs', 'baseline'])
            implementationClass = "com.brightsparklabs.gradle.baseline.BaselinePlugin"
        }
    }
}

// Add a source set for the functional test suite.
sourceSets {
    functionalTest {
    }
}

gradlePlugin.testSourceSets(sourceSets.functionalTest)
configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)

// Add a task to run the functional tests
task functionalTest(type: Test) {
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
}

check {
    // Run the functional tests as part of `check`.
    dependsOn(tasks.functionalTest)
}

// -----------------------------------------------------------------------------
// com.diffplug.spotless
// -----------------------------------------------------------------------------

def header = """/*
               | * Maintained by brightSPARK Labs.
               | * www.brightsparklabs.com
               | *
               | * Refer to LICENSE at repository root for license details.
               | */
             """.stripMargin("|")
spotless {
    java {
        licenseHeader(header)
        googleJavaFormat().aosp()
    }
    groovy {
        licenseHeader(header)
        /* Excludes all Java sources within the Groovy source dirs from formatting. The Groovy
         * Eclipse formatter extends the Java Eclipse formatter, so it formats Java files by
         * default (unless `excludeJava` is used).
         */
        excludeJava()
        greclipse()
        indentWithSpaces(4)
    }
    groovyGradle {
        // same as groovy, but for .gradle (defaults to "*.gradle")

        // unfortunately licenseHeader is currently unsupported on groovyGradle
        //licenseHeader(header)

        greclipse()
        indentWithSpaces(4)
    }
}
